import React, { useState, useEffect } from "react";
import "./login.css";
import { signInWithPopup } from "firebase/auth";
import { auth, provider } from "../firebase";

function Login() {
  const [gradientPosition, setGradientPosition] = useState({ x: 0, y: 0 });
  const [isHovered, setIsHovered] = useState(false);
  const [textColor, setTextColor] = useState("#fff"); // Default text color

  const handleMouseMove = (event) => {
    setGradientPosition({
      x: (event.clientX / window.innerWidth) * 100,
      y: (event.clientY / window.innerHeight) * 100
    });
  };

  const handleMouseEnter = () => {
    setIsHovered(true);
  };

  const handleMouseLeave = () => {
    setIsHovered(false);
  };

  const handleSubmit = async () => {
    try {
      const result = await signInWithPopup(auth, provider);
      console.log(result);
    } catch (error) {
      console.error(error);
    }
  };

  useEffect(() => {
    window.addEventListener("mousemove", handleMouseMove);
    return () => {
      window.removeEventListener("mousemove", handleMouseMove);
    };
  }, []);

  // Update text color based on visibility
  useEffect(() => {
    const interval = setInterval(() => {
      const container = document.querySelector(".login-container");
      if (container) {
        const { color } = window.getComputedStyle(container);
        setTextColor(color);
      }
    }, 100);
    return () => clearInterval(interval);
  }, []);

  return (
    <div
      className="login-container"
      style={{
        background: `radial-gradient(circle at ${gradientPosition.x}% ${gradientPosition.y}%, #ffffff, #f0f0f0, #dcdcdc, #c0c0c0, #a9a9a9, #808080, #696969, #555555, #2f2f2f, #000000)`
      }}
    >
      <div className="login-content">
        <div
          className="logo-container"
          onMouseEnter={handleMouseEnter}
          onMouseLeave={handleMouseLeave}
          style={{ color: isHovered ? "#000" : textColor }}
        >
          <img
            src="https://video-public.canva.com/VAD8lt3jPyI/v/ec7205f25c.gif"
            alt="logo"
            className="logo"
          />
          <h1 className="title" style={{ color: isHovered ? "#000" : textColor }}>Welcome Back!</h1>
        </div>
        <button className="btn-login" onClick={handleSubmit}>
          Login with Google
        </button>
      </div>
    </div>
  );
}

export default Login;
